class Solution:
    def maxProduct(self, nums):
        # Base case: if the list is empty
        if not nums:
            return 0

        # Initialize the current maximum, minimum, and the result
        maxCurrent = minCurrent = maxProduct = nums[0]

        # Iterate through the list starting from the second element
        for i in range(1, len(nums)):
            # If the current number is negative, swap max and min
            if nums[i] < 0:
                maxCurrent, minCurrent = minCurrent, maxCurrent
            
            # Update maxCurrent for the current number
            maxCurrent = max(nums[i], maxCurrent * nums[i])
            
            # Update minCurrent for the current number
            minCurrent = min(nums[i], minCurrent * nums[i])
            
            # Update the result
            maxProduct = max(maxProduct, maxCurrent)

        return maxProduct

